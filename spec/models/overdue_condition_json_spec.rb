=begin
#Kill Bill

#Kill Bill is an open-source billing and payments platform

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for SwaggerClient::OverdueConditionJson
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'OverdueConditionJson' do
  before do
    # run before each test
    @instance = SwaggerClient::OverdueConditionJson.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of OverdueConditionJson' do
    it 'should create an instance of OverdueConditionJson' do
      expect(@instance).to be_instance_of(SwaggerClient::OverdueConditionJson)
    end
  end
  describe 'test attribute "time_since_earliest_unpaid_invoice_equals_or_exceeds"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "control_tag_inclusion"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["AUTO_PAY_OFF", "AUTO_INVOICING_OFF", "OVERDUE_ENFORCEMENT_OFF", "WRITTEN_OFF", "MANUAL_PAY", "TEST", "PARTNER"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.control_tag_inclusion = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "control_tag_exclusion"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["AUTO_PAY_OFF", "AUTO_INVOICING_OFF", "OVERDUE_ENFORCEMENT_OFF", "WRITTEN_OFF", "MANUAL_PAY", "TEST", "PARTNER"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.control_tag_exclusion = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "number_of_unpaid_invoices_equals_or_exceeds"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "response_for_last_failed_payment"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["INVALID_CARD", "EXPIRED_CARD", "LOST_OR_STOLEN_CARD", "DO_NOT_HONOR", "INSUFFICIENT_FUNDS", "DECLINE", "PROCESSING_ERROR", "INVALID_AMOUNT", "DUPLICATE_TRANSACTION", "OTHER"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.response_for_last_failed_payment = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "total_unpaid_invoice_balance_equals_or_exceeds"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end

