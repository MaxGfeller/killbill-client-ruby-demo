=begin
#Kill Bill

#Kill Bill is an open-source billing and payments platform

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::AdminApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'AdminApi' do
  before do
    # run before each test
    @instance = SwaggerClient::AdminApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AdminApi' do
    it 'should create an instance of AdminApi' do
      expect(@instance).to be_instance_of(SwaggerClient::AdminApi)
    end
  end

  # unit tests for get_queue_entries
  # Get queues entries
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :account_id 
  # @option opts [String] :queue_name 
  # @option opts [String] :service_name 
  # @option opts [BOOLEAN] :with_history 
  # @option opts [String] :min_date 
  # @option opts [String] :max_date 
  # @option opts [BOOLEAN] :with_in_processing 
  # @option opts [BOOLEAN] :with_bus_events 
  # @option opts [BOOLEAN] :with_notifications 
  # @return [nil]
  describe 'get_queue_entries test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for invalidates_cache
  # Invalidates the given Cache if specified, otherwise invalidates all caches
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cache_name 
  # @return [nil]
  describe 'invalidates_cache test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for invalidates_cache_by_account
  # Invalidates Caches per account level
  # 
  # @param account_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'invalidates_cache_by_account test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for invalidates_cache_by_tenant
  # Invalidates Caches per tenant level
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant_api_key 
  # @return [nil]
  describe 'invalidates_cache_by_tenant test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for trigger_invoice_generation_for_parked_accounts
  # Trigger an invoice generation for all parked accounts
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :offset 
  # @option opts [Integer] :limit 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'trigger_invoice_generation_for_parked_accounts test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_payment_transaction_state
  # Update existing paymentTransaction and associated payment state
  # 
  # @param payment_id 
  # @param payment_transaction_id 
  # @param [Hash] opts the optional parameters
  # @option opts [AdminPaymentJson] :body 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'update_payment_transaction_state test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
