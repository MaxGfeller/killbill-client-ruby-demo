=begin
#Kill Bill

#Kill Bill is an open-source billing and payments platform

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::CatalogApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CatalogApi' do
  before do
    # run before each test
    @instance = SwaggerClient::CatalogApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CatalogApi' do
    it 'should create an instance of CatalogApi' do
      expect(@instance).to be_instance_of(SwaggerClient::CatalogApi)
    end
  end

  # unit tests for add_simple_plan
  # Upload the full catalog as XML
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [SimplePlanJson] :body 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'add_simple_plan test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_available_addons
  # Retrieve available add-ons for a given product
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :base_product_name 
  # @option opts [String] :price_list_name 
  # @return [Array<PlanDetailJson>]
  describe 'get_available_addons test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_available_base_plans
  # Retrieve available base plans
  # 
  # @param [Hash] opts the optional parameters
  # @return [Array<PlanDetailJson>]
  describe 'get_available_base_plans test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_catalog_json
  # Retrieve the catalog as JSON
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :requested_date 
  # @return [StaticCatalog]
  describe 'get_catalog_json test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for upload_catalog_xml
  # Upload the full catalog as XML
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :body 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'upload_catalog_xml test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
