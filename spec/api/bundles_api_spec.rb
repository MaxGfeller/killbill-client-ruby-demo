=begin
#Kill Bill

#Kill Bill is an open-source billing and payments platform

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::BundlesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'BundlesApi' do
  before do
    # run before each test
    @instance = SwaggerClient::BundlesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of BundlesApi' do
    it 'should create an instance of BundlesApi' do
      expect(@instance).to be_instance_of(SwaggerClient::BundlesApi)
    end
  end

  # unit tests for add_bundle_blocking_state
  # Block a bundle
  # 
  # @param bundle_id 
  # @param [Hash] opts the optional parameters
  # @option opts [BlockingStateJson] :body 
  # @option opts [String] :requested_date 
  # @option opts [Array<String>] :plugin_property 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'add_bundle_blocking_state test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_custom_fields
  # Add custom fields to bundle
  # 
  # @param bundle_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<CustomFieldJson>] :body 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'create_custom_fields test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_tags
  # Add tags to bundle
  # 
  # @param bundle_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tag_list 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'create_tags test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_custom_fields
  # Remove custom fields from bundle
  # 
  # @param bundle_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :custom_field_list 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'delete_custom_fields test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_tags
  # Remove tags from bundle
  # 
  # @param bundle_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tag_list 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'delete_tags test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_bundle
  # Retrieve a bundle by id
  # 
  # @param bundle_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :audit 
  # @return [BundleJson]
  describe 'get_bundle test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_bundle_by_key
  # Retrieve a bundle by external key
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :external_key 
  # @option opts [BOOLEAN] :included_deleted 
  # @option opts [String] :audit 
  # @return [BundleJson]
  describe 'get_bundle_by_key test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_bundles
  # List bundles
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :offset 
  # @option opts [Integer] :limit 
  # @option opts [String] :audit 
  # @return [Array<BundleJson>]
  describe 'get_bundles test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_custom_fields
  # Retrieve bundle custom fields
  # 
  # @param bundle_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :audit 
  # @return [Array<CustomFieldJson>]
  describe 'get_custom_fields test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_tags
  # Retrieve bundle tags
  # 
  # @param bundle_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :audit 
  # @option opts [BOOLEAN] :included_deleted 
  # @return [Array<TagJson>]
  describe 'get_tags test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pause_bundle
  # Pause a bundle
  # 
  # @param bundle_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :requested_date 
  # @option opts [Array<String>] :plugin_property 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'pause_bundle test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for resume_bundle
  # Resume a bundle
  # 
  # @param bundle_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :requested_date 
  # @option opts [Array<String>] :plugin_property 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'resume_bundle test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for search_bundles
  # Search bundles
  # 
  # @param search_key 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :offset 
  # @option opts [Integer] :limit 
  # @option opts [String] :audit 
  # @return [Array<BundleJson>]
  describe 'search_bundles test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for transfer_bundle
  # Transfer a bundle to another account
  # 
  # @param bundle_id 
  # @param [Hash] opts the optional parameters
  # @option opts [BundleJson] :body 
  # @option opts [String] :requested_date 
  # @option opts [String] :billing_policy 
  # @option opts [Array<String>] :plugin_property 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'transfer_bundle test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
