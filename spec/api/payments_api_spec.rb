=begin
#Kill Bill

#Kill Bill is an open-source billing and payments platform

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::PaymentsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'PaymentsApi' do
  before do
    # run before each test
    @instance = SwaggerClient::PaymentsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PaymentsApi' do
    it 'should create an instance of PaymentsApi' do
      expect(@instance).to be_instance_of(SwaggerClient::PaymentsApi)
    end
  end

  # unit tests for cancel_scheduled_payment_transaction_by_external_key
  # Cancels a scheduled payment attempt retry
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :transaction_external_key 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'cancel_scheduled_payment_transaction_by_external_key test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cancel_scheduled_payment_transaction_by_id
  # Cancels a scheduled payment attempt retry
  # 
  # @param payment_transaction_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'cancel_scheduled_payment_transaction_by_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for capture_authorization
  # Capture an existing authorization
  # 
  # @param payment_id 
  # @param [Hash] opts the optional parameters
  # @option opts [PaymentTransactionJson] :body 
  # @option opts [Array<String>] :control_plugin_name 
  # @option opts [Array<String>] :plugin_property 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'capture_authorization test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for capture_authorization_by_external_key
  # Capture an existing authorization
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [PaymentTransactionJson] :body 
  # @option opts [Array<String>] :control_plugin_name 
  # @option opts [Array<String>] :plugin_property 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'capture_authorization_by_external_key test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for chargeback_payment
  # Record a chargeback
  # 
  # @param payment_id 
  # @param [Hash] opts the optional parameters
  # @option opts [PaymentTransactionJson] :body 
  # @option opts [Array<String>] :control_plugin_name 
  # @option opts [Array<String>] :plugin_property 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'chargeback_payment test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for chargeback_payment_by_external_key
  # Record a chargeback
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [PaymentTransactionJson] :body 
  # @option opts [Array<String>] :control_plugin_name 
  # @option opts [Array<String>] :plugin_property 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'chargeback_payment_by_external_key test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for chargeback_reversal_payment
  # Record a chargeback reversal
  # 
  # @param payment_id 
  # @param [Hash] opts the optional parameters
  # @option opts [PaymentTransactionJson] :body 
  # @option opts [Array<String>] :control_plugin_name 
  # @option opts [Array<String>] :plugin_property 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'chargeback_reversal_payment test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for chargeback_reversal_payment_by_external_key
  # Record a chargeback reversal
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [PaymentTransactionJson] :body 
  # @option opts [Array<String>] :control_plugin_name 
  # @option opts [Array<String>] :plugin_property 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'chargeback_reversal_payment_by_external_key test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for complete_transaction
  # Complete an existing transaction
  # 
  # @param payment_id 
  # @param [Hash] opts the optional parameters
  # @option opts [PaymentTransactionJson] :body 
  # @option opts [Array<String>] :control_plugin_name 
  # @option opts [Array<String>] :plugin_property 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'complete_transaction test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for complete_transaction_by_external_key
  # Complete an existing transaction
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [PaymentTransactionJson] :body 
  # @option opts [Array<String>] :control_plugin_name 
  # @option opts [Array<String>] :plugin_property 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'complete_transaction_by_external_key test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_combo_payment
  # Combo api to create a new payment transaction on a existing (or not) account 
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [ComboPaymentTransactionJson] :body 
  # @option opts [Array<String>] :control_plugin_name 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'create_combo_payment test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_custom_fields
  # Add custom fields to payment
  # 
  # @param payment_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<CustomFieldJson>] :body 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'create_custom_fields test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_tags
  # Add tags to payment payment
  # 
  # @param payment_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tag_list 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'create_tags test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_custom_fields
  # Remove custom fields from payment payment
  # 
  # @param payment_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :custom_field_list 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'delete_custom_fields test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_tags
  # Remove tags from payment payment
  # 
  # @param payment_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tag_list 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'delete_tags test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_custom_fields
  # Retrieve payment custom fields
  # 
  # @param payment_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :audit 
  # @return [Array<CustomFieldJson>]
  describe 'get_custom_fields test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_payment
  # Retrieve a payment by id
  # 
  # @param payment_id 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :with_plugin_info 
  # @option opts [BOOLEAN] :with_attempts 
  # @option opts [Array<String>] :plugin_property 
  # @option opts [String] :audit 
  # @return [PaymentJson]
  describe 'get_payment test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_payment_by_external_key
  # Retrieve a payment by external key
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :with_plugin_info 
  # @option opts [BOOLEAN] :with_attempts 
  # @option opts [String] :external_key 
  # @option opts [Array<String>] :plugin_property 
  # @option opts [String] :audit 
  # @return [PaymentJson]
  describe 'get_payment_by_external_key test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_payments
  # Get payments
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :offset 
  # @option opts [Integer] :limit 
  # @option opts [String] :plugin_name 
  # @option opts [Array<String>] :plugin_property 
  # @option opts [String] :audit 
  # @option opts [BOOLEAN] :with_plugin_info 
  # @option opts [BOOLEAN] :with_attempts 
  # @return [Array<PaymentJson>]
  describe 'get_payments test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_tags
  # Retrieve payment payment tags
  # 
  # @param payment_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :audit 
  # @option opts [BOOLEAN] :included_deleted 
  # @return [Array<TagJson>]
  describe 'get_tags test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for refund_payment
  # Refund an existing payment
  # 
  # @param payment_id 
  # @param [Hash] opts the optional parameters
  # @option opts [PaymentTransactionJson] :body 
  # @option opts [Array<String>] :control_plugin_name 
  # @option opts [Array<String>] :plugin_property 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'refund_payment test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for refund_payment_by_external_key
  # Refund an existing payment
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [PaymentTransactionJson] :body 
  # @option opts [Array<String>] :control_plugin_name 
  # @option opts [Array<String>] :plugin_property 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'refund_payment_by_external_key test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for search_payments
  # Search payments
  # 
  # @param search_key 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :offset 
  # @option opts [Integer] :limit 
  # @option opts [String] :plugin_name 
  # @option opts [Array<String>] :plugin_property 
  # @option opts [String] :audit 
  # @option opts [BOOLEAN] :with_plugin_info 
  # @option opts [BOOLEAN] :with_attempts 
  # @return [Array<PaymentJson>]
  describe 'search_payments test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for void_payment
  # Void an existing payment
  # 
  # @param payment_id 
  # @param [Hash] opts the optional parameters
  # @option opts [PaymentTransactionJson] :body 
  # @option opts [Array<String>] :control_plugin_name 
  # @option opts [Array<String>] :plugin_property 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'void_payment test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for void_payment_by_external_key
  # Void an existing payment
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [PaymentTransactionJson] :body 
  # @option opts [Array<String>] :control_plugin_name 
  # @option opts [Array<String>] :plugin_property 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'void_payment_by_external_key test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
