=begin
#Kill Bill

#Kill Bill is an open-source billing and payments platform

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::SubscriptionsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'SubscriptionsApi' do
  before do
    # run before each test
    @instance = SwaggerClient::SubscriptionsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SubscriptionsApi' do
    it 'should create an instance of SubscriptionsApi' do
      expect(@instance).to be_instance_of(SwaggerClient::SubscriptionsApi)
    end
  end

  # unit tests for add_subscription_blocking_state
  # Block a subscription
  # 
  # @param subscription_id 
  # @param [Hash] opts the optional parameters
  # @option opts [BlockingStateJson] :body 
  # @option opts [String] :requested_date 
  # @option opts [Array<String>] :plugin_property 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'add_subscription_blocking_state test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cancel_entitlement_plan
  # Cancel an entitlement plan
  # 
  # @param subscription_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :requested_date 
  # @option opts [BOOLEAN] :call_completion 
  # @option opts [Integer] :call_timeout_sec 
  # @option opts [String] :entitlement_policy 
  # @option opts [String] :billing_policy 
  # @option opts [BOOLEAN] :use_requested_date_for_billing 
  # @option opts [Array<String>] :plugin_property 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'cancel_entitlement_plan test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for change_entitlement_plan
  # Change entitlement plan
  # 
  # @param subscription_id 
  # @param [Hash] opts the optional parameters
  # @option opts [SubscriptionJson] :body 
  # @option opts [String] :requested_date 
  # @option opts [BOOLEAN] :call_completion 
  # @option opts [Integer] :call_timeout_sec 
  # @option opts [String] :billing_policy 
  # @option opts [Array<String>] :plugin_property 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'change_entitlement_plan test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_custom_fields
  # Add custom fields to subscription
  # 
  # @param subscription_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<CustomFieldJson>] :body 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'create_custom_fields test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_entitlement
  # Create an entitlement
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [SubscriptionJson] :body 
  # @option opts [String] :requested_date 
  # @option opts [String] :entitlement_date 
  # @option opts [String] :billing_date 
  # @option opts [BOOLEAN] :migrated 
  # @option opts [Integer] :bcd 
  # @option opts [BOOLEAN] :call_completion 
  # @option opts [Integer] :call_timeout_sec 
  # @option opts [Array<String>] :plugin_property 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'create_entitlement test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_entitlement_with_add_ons
  # Create an entitlement with addOn products
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<SubscriptionJson>] :body 
  # @option opts [String] :requested_date 
  # @option opts [String] :entitlement_date 
  # @option opts [String] :billing_date 
  # @option opts [BOOLEAN] :migrated 
  # @option opts [BOOLEAN] :call_completion 
  # @option opts [Integer] :call_timeout_sec 
  # @option opts [Array<String>] :plugin_property 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'create_entitlement_with_add_ons test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_entitlements_with_add_ons
  # Create multiple entitlements with addOn products
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<BulkBaseSubscriptionAndAddOnsJson>] :body 
  # @option opts [String] :requested_date 
  # @option opts [String] :entitlement_date 
  # @option opts [String] :billing_date 
  # @option opts [BOOLEAN] :migrated 
  # @option opts [BOOLEAN] :call_completion 
  # @option opts [Integer] :call_timeout_sec 
  # @option opts [Array<String>] :plugin_property 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'create_entitlements_with_add_ons test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_tags
  # Add tags to subscription
  # 
  # @param subscription_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tag_list 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'create_tags test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_custom_fields
  # Remove custom fields from subscription
  # 
  # @param subscription_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :custom_field_list 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'delete_custom_fields test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_tags
  # Remove tags from subscription
  # 
  # @param subscription_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tag_list 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'delete_tags test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_custom_fields
  # Retrieve subscription custom fields
  # 
  # @param subscription_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :audit 
  # @return [Array<CustomFieldJson>]
  describe 'get_custom_fields test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_entitlement
  # Retrieve a subscription by id
  # 
  # @param subscription_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :audit 
  # @return [SubscriptionJson]
  describe 'get_entitlement test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_tags
  # Retrieve subscription tags
  # 
  # @param subscription_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :audit 
  # @option opts [BOOLEAN] :included_deleted 
  # @return [Array<TagJson>]
  describe 'get_tags test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for uncancel_entitlement_plan
  # Un-cancel an entitlement
  # 
  # @param subscription_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :plugin_property 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'uncancel_entitlement_plan test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_subscription_bcd
  # Update the BCD associated to a subscription
  # 
  # @param subscription_id 
  # @param [Hash] opts the optional parameters
  # @option opts [SubscriptionJson] :body 
  # @option opts [String] :effective_from_date 
  # @option opts [BOOLEAN] :force_new_bcd_with_past_effective_date 
  # @option opts [String] :x_killbill_created_by 
  # @option opts [String] :x_killbill_reason 
  # @option opts [String] :x_killbill_comment 
  # @return [nil]
  describe 'update_subscription_bcd test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
