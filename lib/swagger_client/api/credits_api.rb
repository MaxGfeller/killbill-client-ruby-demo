=begin
#Kill Bill

#Kill Bill is an open-source billing and payments platform

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require "uri"

module SwaggerClient
  class CreditsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Create a credit
    # 
    # @param [Hash] opts the optional parameters
    # @option opts [CreditJson] :body 
    # @option opts [BOOLEAN] :auto_commit  (default to false)
    # @option opts [String] :x_killbill_created_by 
    # @option opts [String] :x_killbill_reason 
    # @option opts [String] :x_killbill_comment 
    # @return [nil]
    def create_credit(opts = {})
      create_credit_with_http_info(opts)
      return nil
    end

    # Create a credit
    # 
    # @param [Hash] opts the optional parameters
    # @option opts [CreditJson] :body 
    # @option opts [BOOLEAN] :auto_commit 
    # @option opts [String] :x_killbill_created_by 
    # @option opts [String] :x_killbill_reason 
    # @option opts [String] :x_killbill_comment 
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def create_credit_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CreditsApi.create_credit ..."
      end
      # resource path
      local_var_path = "/1.0/kb/credits"

      # query parameters
      query_params = {}
      query_params[:'autoCommit'] = opts[:'auto_commit'] if !opts[:'auto_commit'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'X-Killbill-CreatedBy'] = opts[:'x_killbill_created_by'] if !opts[:'x_killbill_created_by'].nil?
      header_params[:'X-Killbill-Reason'] = opts[:'x_killbill_reason'] if !opts[:'x_killbill_reason'].nil?
      header_params[:'X-Killbill-Comment'] = opts[:'x_killbill_comment'] if !opts[:'x_killbill_comment'].nil?

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'body'])
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CreditsApi#create_credit\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Retrieve a credit by id
    # 
    # @param credit_id 
    # @param [Hash] opts the optional parameters
    # @return [CreditJson]
    def get_credit(credit_id, opts = {})
      data, _status_code, _headers = get_credit_with_http_info(credit_id, opts)
      return data
    end

    # Retrieve a credit by id
    # 
    # @param credit_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(CreditJson, Fixnum, Hash)>] CreditJson data, response status code and response headers
    def get_credit_with_http_info(credit_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CreditsApi.get_credit ..."
      end
      # verify the required parameter 'credit_id' is set
      if @api_client.config.client_side_validation && credit_id.nil?
        fail ArgumentError, "Missing the required parameter 'credit_id' when calling CreditsApi.get_credit"
      end
      if @api_client.config.client_side_validation && credit_id !~ Regexp.new(/\\w+-\\w+-\\w+-\\w+-\\w+/)
        fail ArgumentError, "invalid value for 'credit_id' when calling CreditsApi.get_credit, must conform to the pattern /\\w+-\\w+-\\w+-\\w+-\\w+/."
      end

      # resource path
      local_var_path = "/1.0/kb/credits/{creditId}".sub('{' + 'creditId' + '}', credit_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'CreditJson')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CreditsApi#get_credit\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
